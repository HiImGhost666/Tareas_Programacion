Ejercicios Básicos de Strings
    *Invertir una cadena: Escribe una función que reciba una cadena y devuelva la cadena invertida.
    *Contar vocales: Crea un programa que cuente cuántas vocales hay en una cadena.
    *Palíndromo: Verifica si una cadena es un palíndromo (se lee igual al derecho y al revés).
    *Reemplazar caracteres: Dado un texto, reemplaza todas las vocales por el carácter '*'.
    *Longitud de palabras: Escribe un programa que cuente cuántas palabras tiene una cadena basada en los espacios.

Ejercicios de Condicionales y Strings
    *Comparar cadenas: Pide al usuario dos cadenas y muestra cuál es mayor alfabéticamente.
    *Mayúsculas o minúsculas: Dado un texto, indica si tiene más caracteres en mayúsculas o en minúsculas.
    *Primer y último carácter: Pide una cadena y muestra su primer y último carácter.
    *Contraseña fuerte: Escribe un programa que determine si una cadena cumple con los criterios de una contraseña fuerte (longitud >= 8, al menos un número, una mayúscula y un símbolo).

Ejercicios Combinados con Bucles
    *Buscar caracteres repetidos: Muestra qué caracteres se repiten en una cadena y cuántas veces.
    *Contar palabras específicas: Pide al usuario una cadena y una palabra, y cuenta cuántas veces aparece la palabra en la cadena.
    *Eliminar espacios: Escribe un programa que elimine todos los espacios de una cadena.
    *Cifrado César: Implementa un cifrado simple que desplace cada carácter en un número fijo de posiciones.

Ejercicios con Funciones y Strings
    *Concatenar cadenas: Escribe una función que reciba dos cadenas y las devuelva concatenadas.
    *Formato de título: Implementa una función que reciba una cadena y devuelva el texto en formato de título (primera letra de cada palabra en mayúscula).

Ejercicios Avanzados con Strings
    *Anagramas: Verifica si dos cadenas son anagramas (tienen las mismas letras en diferente orden).
    *Eliminar duplicados: Dado un texto, elimina las palabras duplicadas.
    *Contar dígitos: Cuenta cuántos dígitos hay en una cadena.
    *Ordenar palabras: Escribe un programa que ordene alfabéticamente las palabras de una cadena.
    *Reemplazo múltiple: Cambia todas las apariciones de varias palabras específicas por otra palabra.

Ejercicios de Loops y Condicionales con Strings
    *Dividir cadenas: Divide una cadena en fragmentos de tamaño n e imprímelos.
    *Reemplazo condicional: Cambia todas las letras de una cadena por su siguiente letra en el alfabeto.
    *Palabras más largas: Encuentra la palabra más larga y la más corta en una cadena.
    *Eliminar caracteres específicos: Escribe un programa que elimine todos los caracteres no alfabéticos de una cadena.

Ejercicios Prácticos
    *Buscar patrón: Dado un texto y un patrón, encuentra todas las posiciones en las que aparece el patrón.
    *Transformar números: Convierte un número entero en texto (Ej: 123 → "ciento veintitrés").
    *Formato de texto: Dado un texto en minúsculas, conviértelo en formato "SNAKE_CASE" y "kebab-case".
    *Validar URL: Verifica si una cadena es una URL válida.


21-30: Desafíos Matemáticos con Strings
    *Evaluar una expresión matemática simple en forma de cadena: Por ejemplo, "3+5*2-8" debería evaluarse como 7.
    *Calcular la suma de todos los números presentes en una cadena: Por ejemplo, "abc123def45" → 168.
    *Convertir números romanos a enteros: Por ejemplo, "XIV" → 14.
    *Formatear una cadena como número telefónico: Por ejemplo, "1234567890" → "(123) 456-7890".
    *Verificar si una cadena contiene un número válido en base N (por ejemplo, en base 2, solo puede contener 0s y 1s).


31-40: Algoritmos de Transformación
    *Eliminar caracteres consecutivos repetidos: Por ejemplo, "aaabbcddd" → "abc".
    *Expander una cadena con rangos: Por ejemplo, "a-c" → "abc".
    *Rotar las palabras de una frase hacia la derecha o izquierda: Por ejemplo, "Hola mundo cómo estás" → "estás Hola mundo cómo".
    *Intercambiar las letras mayúsculas por minúsculas y viceversa.
    *Insertar un carácter después de cada vocal: Por ejemplo, "gato" → "gaxto".
    *Dividir una cadena en un número específico de partes iguales: Por ejemplo, "abcdefgh" dividido en 4 partes → ["ab", "cd", "ef", "gh"].
    *Rellenar una cadena corta con ceros hasta alcanzar una longitud específica.

41-50: Desafíos de Validación y Procesamiento
    *Validar si una dirección de correo electrónico es válida.
    *Determinar si una frase tiene palabras en orden alfabético: Por ejemplo, "amor boda casa" es alfabética.
    *Identificar si una cadena es un código binario válido.
    *Verificar si una cadena contiene solo caracteres ASCII.
    *Eliminar palabras que sean números de una cadena: Por ejemplo, "casa 123 perro 456" → "casa perro".
    *Agrupar caracteres por tipo (letras, números, símbolos): Por ejemplo, "a1@b2#" → "ab", "12", "@#".
    *Determinar si una cadena es un "isograma" (todas las letras aparecen una sola vez).